spring:
  datasource:
    url: jdbc:mysql://localhost:3306/jjb
    username: root
    password: root
    driver-class-name: com.mysql.jdbc.Driver
    ###################以下为druid增加的配置###########################
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true
  ###############以上为配置druid添加的配置########################################

  #redis
  # Redis服务器地址
  redis:
    host: 47.75.76.13
    # Redis服务器连接端口
    port: 6379
    jedis:
      pool:
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
        # 连接池中的最小空闲连接
        min-idle: 0
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 8
    # 连接超时时间（毫秒）spring.redis.timeout= 0
    timeout: 5000
    password: ligang


    #上传文件大小
    http:
      multipart:
        max-file-size: 500MB
        max-request-size: 20MB


mybatis:
  mapper-locations: classpath:mapping/**/*.xml
  type-aliases-package: com.taizi.bv.springjjb.i_bought.model

  #pagehelper分页插件
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql
  #thymeleaf的配置是为了去掉html的校验
thymeleaf:
  cache: false
  mode: LEGACYHTML5

  #jpa技术来自动生成基础表格
jpa:
  database: mysql
  show-sql: true
  hibernate:
    ddl-auto: update
    naming:
      strategy: org.hibernate.cfg.DefaultComponentSafeNamingStrategy
    properties:
      hibernate:
      dialect: org.hibernate.dialect.MySQL5Dialect



logging:
  pattern:
    #        console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} [%thread] %-5level %class - %msg%n"
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%logger){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"
  #   <property name="CONSOLE_LOG_PATTERN" value="%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>
  #   <property name="FILE_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>

  level:
    ROOT: INFO
    org.apache: ERROR
    org.apache.http: DEBUG
    org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader: ERROR
    org.springframework.web: ERROR
    org.springframework.security.web.util.matcher: ERROR
    org.springframework.bean: ERROR
    org.springframework.context: ERROR
    org.xnio: ERROR
    springfox: ERROR
    io.undertow: ERROR
    org.hibernate: ERROR
    org.dozer: ERROR
    jdbc.connection: OFF
    jdbc.resultset: OFF
    jdbc.resultsettable: INFO
    jdbc.audit: OFF
    jdbc.sqltiming: OFF
    jdbc.sqlonly: INFO
    com.minlia.mit: DEBUG
    com.minlia.cloud: OFF
    com.zaxxer.hikari: OFF
    javax.management: OFF
    com.minlia: DEBUG
    org.springframework.cache: DEBUG
    org.springframework.support: DEBUG
    org.springframework.context.annotation: ERROR
    org.springframework.cache.interceptor: DEBUG
    org.apache.ibatis: DEBUG
    org.mybatis: DEBUG
    com.hazelcast: INFO
    org.aopalliance.intercept: DEBUG
    org.apache.http.impl.conn: ERROR
    org.apache.http.wire: ERROR



